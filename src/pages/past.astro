---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
let siteURL = Astro.url.origin;
let sessionsResponse;
let sessions = [];
console.log("siteURL: ", siteURL);

try {
	const response = await fetch(siteURL+'/.netlify/functions/get_sessions');
	sessionsResponse = await response.json();
	sessions = sessionsResponse.filter(session => session.status==="past").sort((a,b)=>{
                    return a.timeInMs - b.timeInMs;
                });
	console.log("sessions: ", sessions);
} catch (error){
	console.log("Error getting sessions: ", error);
}
---

<Layout title="Welcome to Astro.">
	<main>
		<!-- {sessions.length === 0 ? <div id="empty">no upcoming sessions yet.</div> : <div>got some sessions</div>} -->
		{sessions.length === 0 && <div id="empty">no past sessions yet.</div>}
		{sessions.length > 0 &&
			(<ul role="list" class="sessions-grid">{
			sessions.map((session) => (
				// <div id="empty">{session.title}</div>
				<Card {session} />
			)) }
			</ul>)
		}
		<!-- <h1>Welcome to <span class="text-gradient">Astro</span></h1>
		<p class="instructions">
			To get started, open the directory <code>src/pages</code> in your project.<br />
			<strong>Code Challenge:</strong> Tweak the "Welcome to Astro" message above.
		</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://docs.astro.build/"
				title="Documentation"
				body="Learn how Astro works and explore the official API docs."
			/>
			<Card
				href="https://astro.build/integrations/"
				title="Integrations"
				body="Supercharge your project with new frameworks and libraries."
			/>
			<Card
				href="https://astro.build/themes/"
				title="Themes"
				body="Explore a galaxy of community-built starter themes."
			/>
			<Card
				href="https://astro.build/chat/"
				title="Community"
				body="Come say hi to our amazing Discord community. ❤️"
			/>
		</ul> -->
	</main>
</Layout>

<style>
	/* main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	} */
	/* main {
		margin: auto;
		width: 100%;
		max-width: 1000px;
		height: calc( 100vh );
	} */
	#empty {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: center;
	}
	.sessions-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, .75fr));
		place-content: center;
		place-items: center;
		gap: 1rem;
		padding: 0;
	}
</style>
